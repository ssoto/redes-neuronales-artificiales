package ia2.classes;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.lang.reflect.Type;
import java.util.LinkedList;
import java.util.List;

public class DataSet{
	
	private File f;
	private List<String[]> linesList;
	
	private int numInputs, numOutputs;
	private Type typeInputs, typeOutputs;
	
	public DataSet(){
		this.f = null;
		this.linesList = null;
	}
	
	
	public void readFile(String fileName){
		long startTime = System.currentTimeMillis();
		long stopTime = 0L;
		boolean headerRead = false;
		try{
			this.f = new File(fileName);
		}catch (Exception e){
			System.err.println("Imposible abrir archivo de datos: "+fileName);
		}
		
		
		try {
			BufferedReader reader = new BufferedReader(new FileReader(fileName));
			linesList = new LinkedList<String[]>();	
			try {
				int linesReaded=0;
				List<Long> newLine = new LinkedList<Long>();
				String line = null;
				String [] lineSplitted;
				while ((line = reader.readLine()) != null) {
					if(linesReaded > 7){
						// ya hemos leido la cabecera
						lineSplitted = line.split(" ");
						linesList.add(lineSplitted);
					}
					else{
						// es cabecera!
						String inType;
						int inArgs;
						
						// linea de input
						if(line.contains("_in=")){
							inArgs = Integer.parseInt(line.split("=")[1]);
							inType = line.split("_")[0];
							
							if (inType=="bool" &&  inArgs>0){
								this.numInputs = inArgs;
								this.typeInputs = Boolean.class;
							}
							else if(inType=="real" && inArgs>0){
								this.numInputs = inArgs;
								this.typeInputs = Float.class;
							}
							else{
								System.err.println("Error parseando fichero "+fileName);
								throw new IllegalArgumentException("fichero dataset incorrecto: "+fileName);
							}
						}else if (line.contains("_out=")) {
							String outType;
							int outArgs;
							
							inArgs = Integer.parseInt(line.split("=")[1]);
							inType = line.split("_")[0];
							
							if (outType=="bool" &&  outArgs>0){
								this.numInputs = outArgs;
								this.typeInputs = Boolean.class;
							}
							else if(inType=="real" && inArgs>0){
								this.numInputs = inArgs;
								this.typeInputs = Float.class;
							}
							else{
								System.err.println("Error parseando fichero "+fileName);
								throw new IllegalArgumentException("fichero dataset incorrecto: "+fileName);
							}
						}
					}
					linesReaded++;
					System.out.println("LÃ­nea: "+line);
				}
			} finally {
				reader.close();
				stopTime = System.currentTimeMillis();
			}
		} catch (IOException ioe) {
			System.err.println("oops " + ioe.getMessage());
		} 
		long elapsedTime = stopTime - startTime; 
		System.out.println("tarda en cargar fichero "+elapsedTime + " mS");
	}
	
	

	

}
